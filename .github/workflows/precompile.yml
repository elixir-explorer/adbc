name: precompile

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  linux:
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: prod
    strategy:
      matrix:
        otp_version: [25]

    name: Linux GNU - OTP ${{ matrix.otp_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: 1.15

      - name: Install system dependecies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip \
            gcc g++

      - name: Precompile
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          mix deps.get
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/adbc*.tar.gz
            cache/adbc*.sha256

  macos:
    runs-on: macos-12
    env:
      MIX_ENV: prod
      elixir_version: "1.16.2"
    strategy:
      matrix:
        job:
          - { otp_version: "25.3.2.8", elixir: "1.16.2" }

    name: macOS - OTP ${{ matrix.job.otp_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install erlang and elixir
        run: |
          export ROOT_DIR=$(pwd)

          mkdir -p ./cache/otp
          curl -fSL https://github.com/cocoa-xu/otp-build/releases/download/v${{ matrix.job.otp_version }}/otp-x86_64-apple-darwin.tar.gz -o ./cache/otp/otp-v${{ matrix.job.otp_version }}-x86_64-apple-darwin.tar.gz
          cd ./cache/otp
          tar -xzf otp-v${{ matrix.job.otp_version }}-x86_64-apple-darwin.tar.gz
          cd ${ROOT_DIR}

          export PATH=$(pwd)/cache/otp/usr/local/bin:$(pwd)/./cache/elixir/elixir-${{ matrix.job.elixir }}/bin:${PATH}
          export ERL_ROOTDIR=$(pwd)/cache/otp/usr/local/lib/erlang

          mkdir -p ./cache/elixir
          curl -fSL https://github.com/elixir-lang/elixir/archive/refs/tags/v${{ matrix.job.elixir }}.tar.gz -o ./cache/elixir/elixir-${{ matrix.job.elixir }}.tar.gz
          cd ./cache/elixir
          tar -xzf elixir-${{ matrix.job.elixir }}.tar.gz
          cd elixir-${{ matrix.job.elixir }}
          make compile
          make -j$(sysctl -n hw.ncpu) install

          mix local.hex --force
          mix local.rebar --force

      - name: Precompile
        run: |
          export PATH=$(pwd)/cache/otp/usr/local/bin:$(pwd)/./cache/elixir/elixir-${{ matrix.job.elixir }}/bin:${PATH}
          export ERL_ROOTDIR=$(pwd)/cache/otp/usr/local/lib/erlang
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          mix deps.get
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/adbc*.tar.gz
            cache/adbc*.sha256

  windows:
    runs-on: windows-latest
    env:
      MIX_ENV: prod
    strategy:
      matrix:
        otp_version: [25]
    
    name: Windows - OTP ${{ matrix.otp_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp_version }}
          elixir-version: 1.15

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Precompile
        shell: bash
        run: |
          export ELIXIR_MAKE_CACHE_DIR=$(pwd)/cache
          mkdir -p "${ELIXIR_MAKE_CACHE_DIR}"
          mix deps.get
          mix elixir_make.precompile

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cache/adbc*.tar.gz
            cache/adbc*.sha256
